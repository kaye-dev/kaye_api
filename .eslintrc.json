{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "unused-imports"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "sourceType": "module",
    "warnOnUnsupportedTypeScriptVersion": true,
    "project": "./tsconfig.json"
  },
  "rules": {
    "import/no-unresolved": "off",
    "eqeqeq": "error",
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "@typescript-eslint/no-non-null-assertion": "error",
    // "@typescript-eslint/explicit-function-return-type": "error",
    // "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      }
      // {
      //   "selector": "variable",
      //   "types": ["function"],
      //   "modifiers": ["exported"],
      //   "format": ["StrictPascalCase"]
      // }
    ],
    "sort-imports": [
      "error",
      {
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["none", "all", "single", "multiple"]
      }
    ],
    "unused-imports/no-unused-imports": "error"
  },
  "ignorePatterns": ["dist"],
  "overrides": []
}
